import logging
import os
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    Application, CommandHandler, MessageHandler, filters, ContextTypes
)
from dotenv import load_dotenv

# –ò–º–ø–æ—Ä—Ç—ã —Ç–≤–æ–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
from handlers.upload import upload_conversation_handler
from handlers.credentials import credentials_handler
from handlers.view_files import view_files_handler

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)

MAIN_MENU = ReplyKeyboardMarkup(
    [["üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª", "üìÅ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∞–π–ª—ã"],
     ["üîê –õ–æ–≥–∏–Ω—ã –∏ –ø–∞—Ä–æ–ª–∏", "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"]],
    resize_keyboard=True
)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ RealEstateBot üëã", reply_markup=MAIN_MENU)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ –∫–Ω–æ–ø–∫–∞–º
async def main_menu_router(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if text == "üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª":
        return await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ /upload —á—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª.")
    elif text == "üìÅ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∞–π–ª—ã":
        return await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ /view —á—Ç–æ–±—ã –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã.")
    elif text == "üîê –õ–æ–≥–∏–Ω—ã –∏ –ø–∞—Ä–æ–ª–∏":
        return await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ /credentials –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —É—á—ë—Ç–∫–∞–º.")
    elif text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏":
        return await update.message.reply_text("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã.")
    else:
        return await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —á–µ—Ä–µ–∑ –º–µ–Ω—é –Ω–∏–∂–µ.")

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
def main():
    app = Application.builder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(upload_conversation_handler)
    app.add_handler(credentials_handler)
    app.add_handler(view_files_handler)
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, main_menu_router))

    app.run_polling()

if __name__ == "__main__":
    main()
